#include <iostream>
#include <thread>
#include <mutex>

using namespace std;

mutex mtx_parent;
mutex mtx_child;

void parent_thread()
{
    // Захватываем свой мьютекс 
    mtx_parent.lock();
    cout << "Родительский поток захватил свой мьютекс\n";
}

void child_thread()
{
    // Захватываем свой мьютекс
    mtx_child.lock();
    cout << "Дочерний поток захватил свой мьютекс\n";

    // Пытаемся захватить мьютекс дочернего потока
    cout << "Дочерний поток пытается захватить мьютекс родительского потока\n";
    if (!mtx_parent.try_lock()) {
        cout << "Дочерний поток не смог захватить мьютекс родительского потока из-за взаимной блокировки\n";
    }
    else {
        cout << "Дочерний поток успешно захватил мьютекс родительского потока\n";
        mtx_parent.unlock();
    }
}

int main()
{
    setlocale(LC_ALL, "RU");
    // Сценарий 2: Дочерний поток захватывает свой мьютекс первым, а затем пытается захватить мьютекс родительского потока, который уже захвачен
    cout << "Сценарий 2: Дочерний поток сначала захватывает свой мьютекс, затем пытается захватить мьютекс родительского потока\n";
    thread t1(child_thread);
    thread t2(parent_thread);
    t1.join();
    t2.join();
    cout << "Сценарий 2: Завершен\n\n";

    return 0;
}
